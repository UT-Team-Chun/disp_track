[project]
name = "disptrack_uv"
version = "0.1.0"
description = "disptrack_uv"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "fire>=0.7.0",
    "pydantic>=2.10.6",
]

[dependency-groups]
dev = [
    "coverage>=7.6.10",
    "mypy>=1.14.1",
    "pre-commit>=4.1.0",
    "pytest>=8.3.4",
    "ruff>=0.9.1",
]

[project.optional-dependencies]
additional = []

[tool.uv.sources]


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.mypy]
ignore_missing_imports = true
exclude = "build"
plugins = "pydantic.mypy"
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
check_untyped_defs = true

[tool.ruff]
line-length = 99

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
]
ignore = [
    "B028",  # No explicit `stacklevel` keyword argument found
    "E731",  # Do not assign a `lambda` expression, use a `def`
    "E741",  # Ambiguous variable name (for lambda expression)
    "E501",  # Line too long
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191",  # indentation contains tabs
    "B904", # raise ... from ... になっていない場合のエラーを無視
]
unfixable = [
    "F401",   # unused import
    "F841",   # unused variable
    "ERA001", # commented out code
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.coverage]
source = ["tests"]

[tool.coverage.run]
branch = true

[tool.coverage.report]
show_missing = true
fail_under = 100